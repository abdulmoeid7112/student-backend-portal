// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Student Backend Portal",
    "title": "Portal System",
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/student": {
      "get": {
        "description": "get all the students",
        "operationId": "ListStudents",
        "parameters": [
          {
            "type": "string",
            "description": "filter's details",
            "name": "name",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "filter's details",
            "name": "age",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter's details",
            "name": "level",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter's details",
            "name": "phone",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The number of items to skip before starting to collect the result set",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The numbers of items to return",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "student response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/student"
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "operationId": "addStudent",
        "parameters": [
          {
            "description": "student's details",
            "name": "student",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "student added",
            "schema": {
              "$ref": "#/definitions/student"
            }
          },
          "409": {
            "description": "student already exists"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/student/{ID}": {
      "get": {
        "description": "return student based on UUID",
        "operationId": "getStudent",
        "parameters": [
          {
            "type": "string",
            "description": "UUID of the student",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "student response",
            "schema": {
              "$ref": "#/definitions/student"
            }
          },
          "404": {
            "description": "student not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "operationId": "updateStudent",
        "parameters": [
          {
            "type": "string",
            "description": "UUID of the student",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "description": "student's details",
            "name": "student",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "student updated",
            "schema": {
              "$ref": "#/definitions/student"
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "description": "delete student with id provided in url",
        "operationId": "DeleteStudent",
        "parameters": [
          {
            "type": "string",
            "description": "UUID of the student",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "student deleted"
          },
          "404": {
            "description": "student not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "student": {
      "type": "object",
      "properties": {
        "Age": {
          "type": "integer"
        },
        "ID": {
          "type": "string"
        },
        "Level": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Student Backend Portal",
    "title": "Portal System",
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/student": {
      "get": {
        "description": "get all the students",
        "operationId": "ListStudents",
        "parameters": [
          {
            "type": "string",
            "description": "filter's details",
            "name": "name",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "filter's details",
            "name": "age",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter's details",
            "name": "level",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter's details",
            "name": "phone",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The number of items to skip before starting to collect the result set",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The numbers of items to return",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "student response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/student"
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "operationId": "addStudent",
        "parameters": [
          {
            "description": "student's details",
            "name": "student",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "student added",
            "schema": {
              "$ref": "#/definitions/student"
            }
          },
          "409": {
            "description": "student already exists"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/student/{ID}": {
      "get": {
        "description": "return student based on UUID",
        "operationId": "getStudent",
        "parameters": [
          {
            "type": "string",
            "description": "UUID of the student",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "student response",
            "schema": {
              "$ref": "#/definitions/student"
            }
          },
          "404": {
            "description": "student not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "operationId": "updateStudent",
        "parameters": [
          {
            "type": "string",
            "description": "UUID of the student",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "description": "student's details",
            "name": "student",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "student updated",
            "schema": {
              "$ref": "#/definitions/student"
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "description": "delete student with id provided in url",
        "operationId": "DeleteStudent",
        "parameters": [
          {
            "type": "string",
            "description": "UUID of the student",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "student deleted"
          },
          "404": {
            "description": "student not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "student": {
      "type": "object",
      "properties": {
        "Age": {
          "type": "integer"
        },
        "ID": {
          "type": "string"
        },
        "Level": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        }
      }
    }
  }
}`))
}
