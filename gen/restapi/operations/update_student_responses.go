// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/abdulmoeid7112/student-backend-portal/gen/models"
)

// UpdateStudentOKCode is the HTTP code returned for type UpdateStudentOK
const UpdateStudentOKCode int = 200

/*UpdateStudentOK student updated

swagger:response updateStudentOK
*/
type UpdateStudentOK struct {

	/*
	  In: Body
	*/
	Payload *models.Student `json:"body,omitempty"`
}

// NewUpdateStudentOK creates UpdateStudentOK with default headers values
func NewUpdateStudentOK() *UpdateStudentOK {

	return &UpdateStudentOK{}
}

// WithPayload adds the payload to the update student o k response
func (o *UpdateStudentOK) WithPayload(payload *models.Student) *UpdateStudentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update student o k response
func (o *UpdateStudentOK) SetPayload(payload *models.Student) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateStudentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateStudentInternalServerErrorCode is the HTTP code returned for type UpdateStudentInternalServerError
const UpdateStudentInternalServerErrorCode int = 500

/*UpdateStudentInternalServerError internal server error

swagger:response updateStudentInternalServerError
*/
type UpdateStudentInternalServerError struct {
}

// NewUpdateStudentInternalServerError creates UpdateStudentInternalServerError with default headers values
func NewUpdateStudentInternalServerError() *UpdateStudentInternalServerError {

	return &UpdateStudentInternalServerError{}
}

// WriteResponse to the client
func (o *UpdateStudentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
